const VAULT_CONTRACT_ADDRESS = "0xBfCda0baC2A7866D0a13DB211Fe6532F0fA2Cad4";
const ATESTAMINT_CONTRACT_ADDRESS =
  "0x0AE7d655Cda406c5b73Ea76855e2cE6aC3812a8E";

const VAULT_CONTRACT_ABI = [
  {
    inputs: [
      { internalType: "contract IEAS", name: "eas", type: "address" },
      { internalType: "contract IWorldID", name: "_worldId", type: "address" },
      { internalType: "string", name: "_appId", type: "string" },
      { internalType: "string", name: "_actionId", type: "string" },
      { internalType: "address", name: "_atestamint", type: "address" },
      { internalType: "bytes32", name: "schemaId", type: "bytes32" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "AccessDenied", type: "error" },
  { inputs: [], name: "InsufficientValue", type: "error" },
  { inputs: [], name: "InvalidEAS", type: "error" },
  { inputs: [], name: "InvalidNullifier", type: "error" },
  { inputs: [], name: "NotPayable", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "forVotes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "editionSize",
        type: "uint64",
      },
    ],
    name: "FundsUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPositive",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "signal",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifierHash",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[8]",
        name: "proof",
        type: "uint256[8]",
      },
    ],
    name: "TestingData",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nulllifierHash",
        type: "uint256",
      },
      { indexed: false, internalType: "bool", name: "isFor", type: "bool" },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "uid", type: "bytes32" },
          { internalType: "bytes32", name: "schema", type: "bytes32" },
          { internalType: "uint64", name: "time", type: "uint64" },
          { internalType: "uint64", name: "expirationTime", type: "uint64" },
          { internalType: "uint64", name: "revocationTime", type: "uint64" },
          { internalType: "bytes32", name: "refUID", type: "bytes32" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "address", name: "attester", type: "address" },
          { internalType: "bool", name: "revocable", type: "bool" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "attest",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "editionSize",
    outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_atestamint",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_eas",
    outputs: [{ internalType: "contract IEAS", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "i_schemaId",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "initialized",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPayable",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "uid", type: "bytes32" },
          { internalType: "bytes32", name: "schema", type: "bytes32" },
          { internalType: "uint64", name: "time", type: "uint64" },
          { internalType: "uint64", name: "expirationTime", type: "uint64" },
          { internalType: "uint64", name: "revocationTime", type: "uint64" },
          { internalType: "bytes32", name: "refUID", type: "bytes32" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "address", name: "attester", type: "address" },
          { internalType: "bool", name: "revocable", type: "bool" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      { internalType: "uint256[]", name: "values", type: "uint256[]" },
    ],
    name: "multiAttest",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "uid", type: "bytes32" },
          { internalType: "bytes32", name: "schema", type: "bytes32" },
          { internalType: "uint64", name: "time", type: "uint64" },
          { internalType: "uint64", name: "expirationTime", type: "uint64" },
          { internalType: "uint64", name: "revocationTime", type: "uint64" },
          { internalType: "bytes32", name: "refUID", type: "bytes32" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "address", name: "attester", type: "address" },
          { internalType: "bool", name: "revocable", type: "bool" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct Attestation[]",
        name: "attestations",
        type: "tuple[]",
      },
      { internalType: "uint256[]", name: "values", type: "uint256[]" },
    ],
    name: "multiRevoke",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "negativeVotes",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "positiveVotes",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "uid", type: "bytes32" },
          { internalType: "bytes32", name: "schema", type: "bytes32" },
          { internalType: "uint64", name: "time", type: "uint64" },
          { internalType: "uint64", name: "expirationTime", type: "uint64" },
          { internalType: "uint64", name: "revocationTime", type: "uint64" },
          { internalType: "bytes32", name: "refUID", type: "bytes32" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "address", name: "attester", type: "address" },
          { internalType: "bool", name: "revocable", type: "bool" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "revoke",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_nftContract", type: "address" },
      { internalType: "address", name: "_creator", type: "address" },
      { internalType: "uint64", name: "_editionSize", type: "uint64" },
    ],
    name: "setup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "tokenIdVoted",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "uniqueHumanVoted",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "string", name: "description", type: "string" },
      { internalType: "bool", name: "isPositive", type: "bool" },
      { internalType: "address", name: "signal", type: "address" },
      { internalType: "uint256", name: "root", type: "uint256" },
      { internalType: "uint256", name: "nullifierHash", type: "uint256" },
      { internalType: "uint256[8]", name: "proof", type: "uint256[8]" },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
];

const ATESTAMINT_ABI = [
  {
    inputs: [
      {
        internalType: "contract IZoraFactory",
        name: "zoraNftFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dropAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "editionSize",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataURIBase",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataContractURI",
        type: "string",
      },
    ],
    name: "DropCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "editionAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "vaultAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "editionSize",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "imageURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadataContractURI",
        type: "string",
      },
    ],
    name: "EditionCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "SETUP_VAULT_METHOD_ID",
    outputs: [{ internalType: "bytes4", name: "", type: "bytes4" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "string", name: "symbol", type: "string" },
          { internalType: "uint64", name: "editionSize", type: "uint64" },
          { internalType: "uint16", name: "royaltyBPS", type: "uint16" },
          {
            components: [
              {
                internalType: "uint104",
                name: "publicSalePrice",
                type: "uint104",
              },
              {
                internalType: "uint32",
                name: "maxSalePurchasePerAddress",
                type: "uint32",
              },
              {
                internalType: "uint64",
                name: "publicSaleStart",
                type: "uint64",
              },
              { internalType: "uint64", name: "publicSaleEnd", type: "uint64" },
              { internalType: "uint64", name: "presaleStart", type: "uint64" },
              { internalType: "uint64", name: "presaleEnd", type: "uint64" },
              {
                internalType: "bytes32",
                name: "presaleMerkleRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct IERC721Drop.SalesConfiguration",
            name: "saleConfig",
            type: "tuple",
          },
          { internalType: "string", name: "metadataURIBase", type: "string" },
          {
            internalType: "string",
            name: "metadataContractURI",
            type: "string",
          },
        ],
        internalType: "struct AtestamintV2.CreateDropInputParams",
        name: "inputParams",
        type: "tuple",
      },
    ],
    name: "createDropCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "string", name: "symbol", type: "string" },
          { internalType: "uint64", name: "editionSize", type: "uint64" },
          { internalType: "uint16", name: "royaltyBPS", type: "uint16" },
          {
            components: [
              {
                internalType: "uint104",
                name: "publicSalePrice",
                type: "uint104",
              },
              {
                internalType: "uint32",
                name: "maxSalePurchasePerAddress",
                type: "uint32",
              },
              {
                internalType: "uint64",
                name: "publicSaleStart",
                type: "uint64",
              },
              { internalType: "uint64", name: "publicSaleEnd", type: "uint64" },
              { internalType: "uint64", name: "presaleStart", type: "uint64" },
              { internalType: "uint64", name: "presaleEnd", type: "uint64" },
              {
                internalType: "bytes32",
                name: "presaleMerkleRoot",
                type: "bytes32",
              },
            ],
            internalType: "struct IERC721Drop.SalesConfiguration",
            name: "saleConfig",
            type: "tuple",
          },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "animationURI", type: "string" },
          { internalType: "string", name: "imageURI", type: "string" },
          {
            internalType: "string",
            name: "metadataContractURI",
            type: "string",
          },
        ],
        internalType: "struct AtestamintV2.CreateEditionInputParams",
        name: "inputParams",
        type: "tuple",
      },
    ],
    name: "createEditionCollection",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "i_zoraNftFactory",
    outputs: [
      { internalType: "contract IZoraFactory", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "schemaId",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "_schemaId", type: "bytes32" }],
    name: "updateSchemaId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vaultImplementation",
        type: "address",
      },
    ],
    name: "updateVaultImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultImplementation",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
];

export {
  VAULT_CONTRACT_ADDRESS,
  VAULT_CONTRACT_ABI,
  ATESTAMINT_ABI,
  ATESTAMINT_CONTRACT_ADDRESS,
};
